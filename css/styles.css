html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

:root {
    --primary-color: #357b70;
    --secondary-color: #8a74cf;
    --visited-link: #2b2b2b;
    --light-grey: #c2bcbc;
    --paragraph-size: 16px;
    --heading1: 30px;
    --heading2: 24px;
    --heading3: 18px;
    --heading-font-weight: 700;
    --body-font-weight: 400;
}

body {
    background-color: whitesmoke;
    font-family: 'Lato', sans-serif;
    font-weight: var(--body-font-weight);
    font-size: var(--paragraph-size);
    line-height: 1.6;
}

h1 {
    font-size: var(--heading1);
    font-weight: var(--heading-font-weight);
}

h2 {
    font-size: var(--heading2);
    font-weight: var(--heading-font-weight);
}

h3 {
    font-size: var(--heading3);
    font-weight: var(--heading-font-weight);
}

a {
    color: var(--primary-color);
}

a:visited {
    /* visited link */
    color: var(--visited-link);
}

a:hover, a:focus {
    /* No underlining when hovering over a link */
    text-decoration: none;
}

a:active {
    /* selected link */
    color: var(--primary-color)

}

input, textarea, select, button {
    font-family: system-ui;
}

.navigation-list__item- -active {
    text-decoration: none;
}

.about {
    max-width: 700px;
    margin: 0 auto;
    text-align: center;
}

.about ul {
    list-style-type: none;
    padding: 0;
}

.profile {
    max-width: 800px;
    margin: 0 auto;
}

.profile__portrait {
    float: left;
    min-width: 360px;
    max-width: 600px;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.page-header {
    display: flex;
    width: 100%;
    padding: 20px;
}

.page-header__item {
    flex: 0 1 200px;
}

.page-header__item:last-child {
    flex-grow: 1;
    text-align: right;
}

.navigation-list {
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

.grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
}

.grid__item {
    background-color: var(--light-grey);
    padding: 10px;
}

.grid__item:last-child {
    grid-column-start: 3;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 3
}

/* start grid fallback */

.grid__item {
    display: inline-block;
    width: 33%;
}

/* end grid fallback */

@supports (display:grid) {
    .grid {
        display: grid;
        /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 20px;
        margin: 0;
    }

    .grid__item {
        background-color: var(--light-grey);
        width: auto;
        min-height: auto;
        margin: 0;
    }

    .grid__item:last-child {
        grid-column: 3 / 3;
        grid-row: 1 / 3;
    }
}

@media all and (max-width: 500px) {
    .grid {
        grid-template-columns: 1fr;
    }
}

@media all and (min-width: 500px) and (max-width: 750px) {
    .grid {
        grid-template-columns: 1fr 1fr;
    }
}

@media all and (max-width: 750px) {
    .grid {
        grid-gap: 10px;
    }
    .grid__item:last-child {
        grid-column: auto / auto;
        grid-row: auto / auto;
    }
    h1 {
        font-size: 22px;
    }
}

button, 
.button {
    border: none;
    display: inline-block;
    font-family: inherit;
    background-color: var(--primary-color);
    font-size: var(--paragraph-size);
    color: var(--light-grey);
    text-decoration: none;
    padding: 5px;
    margin-top: 10px;
    border-radius: 3px;
    border-bottom: 2px solid rgba(0, 0, 0.3);
    transition: 0.4s opacity; /*shorter example*/
}

.button_secondary {
    background-color: var(--secondary-color);
    color: var(lightgray);
}

button:hover, 
button:focus, 
.button:hover, 
.button:focus {
    cursor: pointer;
    opacity: 80%;
    color: var(--light-grey);
}

@keyframes color-change {
    from {
        fill: #ffff00;
    }
    to {
        fill: #f76414;
    }
}

.sun {
    animation-duration: 4s;
    animation-name: color-change;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
}

@keyframes cloud-move {
    from {
        transform: translate(0,0);
    }
    to {
        transform: translate(50px, 0);
    }
}

.cloud1 {
    animation: 5s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
    from {
        transform: translate(90px, 80px);
    }
    to {
        transform: translate(90px, 50px);
    }
}

.cloud2 {
    animation: 5s cloud-move-reverse infinite alternate linear;
} 


